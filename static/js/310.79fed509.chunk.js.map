{"version":3,"file":"static/js/310.79fed509.chunk.js","mappings":"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","sources":["components/MovieCategoryList/MovieCategoryList.styled.js","components/MovieCategoryList/MovieCategoryList.js","components/Hero/Hero.styled.js","components/Hero/Hero.js","components/MovieListSection/MovieListSection.styled.js","components/MovieListSection/MovieListSection.js","pages/Home/Home.styled.js","pages/Home/Home.js","services/tmdbApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.div`\n  .swiper {\n    height: 216px;\n\n    @media screen and (min-width: 768px) {\n      height: 232px;\n    }\n  }\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Item = styled(NavLink)`\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #ec9706;\n  }\n`;\n\nconst Poster = styled.img`\n  object-fit: cover;\n`;\n\nconst MovieInfo = styled.div`\n  padding: 12px 4px;\n\n  text-align: center;\n`;\n\nexport { List, ListItem, Item, Poster, MovieInfo };\n","import { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport {\n  List,\n  ListItem,\n  Item,\n  Poster,\n  MovieInfo,\n} from './MovieCategoryList.styled';\nimport defaultPicture from '../../images/placeholder-home.jpg';\n\nexport const MovieCategoryList = ({ items, type }) => {\n  return (\n    <List>\n      <Swiper spaceBetween={12} slidesPerView={'auto'}>\n        {items.map(({ id, backdrop_path, title, name }) => (\n          <SwiperSlide key={id} style={{ width: '280px' }}>\n            <ListItem>\n              <Item to={`/${type}/${id}`}>\n                <Poster\n                  src={\n                    backdrop_path\n                      ? `https://image.tmdb.org/t/p/original${backdrop_path}`\n                      : defaultPicture\n                  }\n                  alt={title || name}\n                />\n                <MovieInfo>\n                  <p>{title || name}</p>\n                </MovieInfo>\n              </Item>\n            </ListItem>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </List>\n  );\n};\n","import { Swiper } from 'swiper/react';\nimport styled from 'styled-components';\n\nconst Container = styled.div``;\n\nconst HeroSwiper = styled(Swiper)`\n  width: 100%;\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  &:after {\n    position: absolute;\n    content: ' ';\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: linear-gradient(\n      to top,\n      rgb(33, 33, 33, 1),\n      rgb(33, 33, 33, 0.2)\n    );\n    pointer-events: visible;\n    z-index: 1;\n  }\n`;\n\nconst PrevButton = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 50px;\n  height: 50px;\n\n  cursor: pointer;\n\n  z-index: 2;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  :focus {\n    color: #fce205;\n  }\n`;\n\nconst NextButton = styled.div`\n  position: absolute;\n  top: 50%;\n  right: 0;\n  transform: translateY(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 50px;\n  height: 50px;\n\n  cursor: pointer;\n\n  z-index: 2;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  :focus {\n    color: #fce205;\n  }\n`;\n\nexport { Container, HeroSwiper, PrevButton, NextButton };\n","import { useState, useEffect, useRef } from 'react';\nimport { SwiperSlide } from 'swiper/react';\nimport { Navigation, EffectFade } from 'swiper';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/effect-fade';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { getNowPlayingMovies } from 'services/tmdbApi';\nimport { Container, HeroSwiper, PrevButton, NextButton } from './Hero.styled';\n\nexport const Hero = () => {\n  const [images, setImages] = useState([]);\n\n  console.log(images);\n\n  const swiperNavPrevRef = useRef(null);\n  const swiperNavNextRef = useRef(null);\n\n  useEffect(() => {\n    getNowPlayingMovies().then(({ results }) => setImages(results));\n  }, []);\n\n  return (\n    <Container>\n      <HeroSwiper\n        modules={[Navigation, EffectFade]}\n        navigation={{\n          prevEl: swiperNavPrevRef.current,\n          nextEl: swiperNavNextRef.current,\n        }}\n        speed={800}\n        slidesPerView={1}\n        loop\n        onInit={swiper => {\n          swiper.params.navigation.prevEl = swiperNavPrevRef.current;\n          swiper.params.navigation.nextEl = swiperNavNextRef.current;\n          swiper.navigation.init();\n          swiper.navigation.update();\n        }}\n      >\n        {images.map(({ id, backdrop_path, title }) => (\n          <SwiperSlide key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${backdrop_path}`}\n              alt={title}\n            />\n          </SwiperSlide>\n        ))}\n        <PrevButton ref={swiperNavPrevRef}>\n          <IoIosArrowBack size={36} />\n        </PrevButton>\n        <NextButton ref={swiperNavNextRef}>\n          <IoIosArrowForward size={36} />\n        </NextButton>\n      </HeroSwiper>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  padding: 8px 0;\n`;\n\nconst Heading = styled.h2`\n  font-size: 28px;\n`;\n\nexport { Section, Heading };\n","import { useState, useEffect } from 'react';\nimport {\n  getPopularMovies,\n  getTopRatedMovies,\n  getPopularTVSeries,\n  getTopRatedTVSeries,\n} from 'services/tmdbApi';\nimport { MovieCategoryList } from 'components/MovieCategoryList';\nimport { Section, Heading } from './MovieListSection.styled';\n\nexport const MovieListSection = ({ category }) => {\n  const [heading, setHeading] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [type, setType] = useState('');\n\n  useEffect(() => {\n    switch (category) {\n      case 'popularMovies':\n        setHeading('Popular Movies');\n        getPopularMovies().then(({ results }) => setMovies(results));\n        setType('movies');\n        break;\n\n      case 'topRatedMovies':\n        setHeading('Top Rated Movies');\n        getTopRatedMovies().then(({ results }) => setMovies(results));\n        setType('movies');\n        break;\n\n      case 'popularTVSeries':\n        setHeading('Popular TV Series');\n        getPopularTVSeries().then(({ results }) => setMovies(results));\n        setType('tv');\n        break;\n\n      case 'topRatedTVSeries':\n        setHeading('Top Rated TV Series');\n        getTopRatedTVSeries().then(({ results }) => setMovies(results));\n        setType('tv');\n        break;\n\n      default:\n        return;\n    }\n  }, [category]);\n\n  return (\n    <Section>\n      <Heading>{heading}</Heading>\n      <MovieCategoryList items={movies} type={type} />\n    </Section>\n  );\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 16px;\n  }\n`;\n\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport { Container, Wrapper, SectionWrapper };\n","import { Hero } from 'components/Hero';\nimport { MovieListSection } from 'components/MovieListSection';\nimport { Container, Wrapper, SectionWrapper } from './Home.styled';\n\nconst Home = () => {\n  return (\n    <main>\n      <Hero />\n      <Container>\n        <Wrapper>\n          <SectionWrapper>\n            <MovieListSection category=\"popularMovies\" />\n            <MovieListSection category=\"topRatedMovies\" />\n            <MovieListSection category=\"popularTVSeries\" />\n            <MovieListSection category=\"topRatedTVSeries\" />\n          </SectionWrapper>\n        </Wrapper>\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bfcd7a06a5bb09fb5aafe756d2f60f73';\n\naxios.defaults.baseURL = `${BASE_URL}`;\n\nconst getTrendingMovies = async () => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getMovieByQuery = async (query, page) => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: { api_key: API_KEY, query, page },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getMovieById = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getMovieCast = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/credits`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getTVSeriesCast = async id => {\n  try {\n    const response = await axios.get(`/tv/${id}/credits`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getTrendingTVSeries = async () => {\n  try {\n    const response = await axios.get('/trending/tv/day', {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getTVSeriesByQuery = async (query, page) => {\n  try {\n    const response = await axios.get('/search/tv', {\n      params: { api_key: API_KEY, query, page },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getTVSeriesById = async id => {\n  try {\n    const response = await axios.get(`/tv/${id}`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getPopularMovies = async () => {\n  try {\n    const response = await axios.get('/movie/popular', {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getTopRatedMovies = async () => {\n  try {\n    const response = await axios.get('/movie/top_rated', {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getPopularTVSeries = async () => {\n  try {\n    const response = await axios.get('/tv/popular', {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getTopRatedTVSeries = async () => {\n  try {\n    const response = await axios.get('/tv/top_rated', {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getSimilarMovies = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/similar`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getSimilarTVSeries = async id => {\n  try {\n    const response = await axios.get(`/tv/${id}/similar`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getMovieVideos = async id => {\n  try {\n    const response = await axios.get(`/movie/${id}/videos`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getTVSeriesVideos = async id => {\n  try {\n    const response = await axios.get(`/tv/${id}/videos`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getNowPlayingMovies = async () => {\n  try {\n    const response = await axios.get(`/movie/now_playing`, {\n      params: { api_key: API_KEY },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByQuery,\n  getMovieById,\n  getMovieCast,\n  getTVSeriesCast,\n  getTrendingTVSeries,\n  getTVSeriesByQuery,\n  getTVSeriesById,\n  getPopularMovies,\n  getTopRatedMovies,\n  getPopularTVSeries,\n  getTopRatedTVSeries,\n  getSimilarMovies,\n  getSimilarTVSeries,\n  getMovieVideos,\n  getTVSeriesVideos,\n  getNowPlayingMovies,\n};\n"],"names":["List","styled","ListItem","Item","NavLink","Poster","MovieInfo","MovieCategoryList","items","type","spaceBetween","slidesPerView","map","id","backdrop_path","title","name","style","width","to","src","defaultPicture","alt","Container","HeroSwiper","Swiper","PrevButton","NextButton","Hero","useState","images","setImages","console","log","swiperNavPrevRef","useRef","swiperNavNextRef","useEffect","getNowPlayingMovies","then","results","modules","Navigation","EffectFade","navigation","prevEl","current","nextEl","speed","loop","onInit","swiper","params","init","update","ref","size","Section","Heading","MovieListSection","category","heading","setHeading","movies","setMovies","setType","getPopularMovies","getTopRatedMovies","getPopularTVSeries","getTopRatedTVSeries","Wrapper","SectionWrapper","API_KEY","axios","getTrendingMovies","api_key","response","data","getMovieByQuery","query","page","getMovieById","getMovieCast","getTVSeriesCast","getTrendingTVSeries","getTVSeriesByQuery","getTVSeriesById","getSimilarMovies","getSimilarTVSeries","getMovieVideos","getTVSeriesVideos"],"sourceRoot":""}