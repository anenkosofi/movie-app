{"version":3,"file":"static/js/724.ba97b037.chunk.js","mappings":"kNAGMA,EAAOC,EAAAA,GAAAA,GAAH,uXAsBJC,EAAWD,EAAAA,GAAAA,GAAH,2QAaRE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uPAWJI,EAASJ,EAAAA,GAAAA,IAAH,wJAUNK,EAAYL,EAAAA,GAAAA,IAAH,8C,mBCxDFM,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACjC,OACE,SAACT,EAAD,UACGQ,EAAME,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACT,SAACZ,EAAD,WACE,UAACC,EAAD,CAAMY,GAAE,WAAMN,EAAN,YAAcE,GAAtB,WACE,SAACN,EAAD,CACEW,IACEJ,EAAW,yCAC2BA,GAClCK,EAENC,IAAKL,GAASC,KAEhB,SAACR,EAAD,WACE,uBAAIO,GAASC,UAXJH,EADN,KAmBhB,C,qJCvBKQ,EAAgBlB,EAAAA,GAAAA,QAAH,4CAIbmB,EAAYnB,EAAAA,GAAAA,IAAH,8TAiBToB,EAAepB,EAAAA,GAAAA,IAAH,mFAMZqB,EAAgBrB,EAAAA,GAAAA,IAAH,mmC,SCuCnB,EA1DgB,SAAC,GAAc,IAAZQ,EAAW,EAAXA,KACjB,GAAoBc,EAAAA,EAAAA,WAAS,WAAO,IAAD,EACjC,iBAAOC,KAAKC,MAAMC,aAAaC,QAAQ,qBAAvC,QAAwD,EACzD,IAFMC,GAAP,eAGA,GAAkBL,EAAAA,EAAAA,WAAS,WAAO,IAAD,EAC/B,iBAAOC,KAAKC,MAAMC,aAAaC,QAAQ,mBAAvC,QAAsD,EACvD,IAFME,GAAP,eAOMC,EAJc,kBAAIF,IAAJ,OAAkBC,IAASnB,KAAI,qBAAGC,EAAH,IAChBoB,QACjC,SAACpB,EAAIqB,EAAOC,GAAZ,OAAsBA,EAAMC,QAAQvB,KAAQqB,CAA5C,IAEkCtB,KAAI,SAAAC,GACtC,MAAO,kBAAIiB,IAAJ,OAAkBC,IAASM,MAAK,SAAAC,GAAK,OAAIA,EAAMzB,KAAOA,CAAjB,GAC7C,IACD,GAA4BY,EAAAA,EAAAA,UAASO,GAArC,eAAOO,EAAP,KAAeC,EAAf,KAEMC,EAAwB,SAAAzB,GAC5B,OAAQA,GACN,IAAK,YACHwB,GAAU,OAAIV,IACd,MAEF,IAAK,UACHU,GAAU,OAAIT,IACd,MAEF,QACE,OAEL,EAED,OACE,SAACV,EAAD,WACE,SAACC,EAAD,WACE,UAACC,EAAD,YACE,UAACC,EAAD,YACE,oBACEb,KAAK,SACL+B,QAAS,kBAAMD,EAAsB,YAA5B,EAFX,WAIE,SAAC,MAAD,CAAgBE,KAAM,MACtB,wCAEF,oBACEhC,KAAK,SACL+B,QAAS,kBAAMD,EAAsB,UAA5B,EAFX,WAIE,SAAC,MAAD,CAAcE,KAAM,MACpB,6CAGJ,SAAClC,EAAA,EAAD,CAAWC,MAAO6B,EAAQ5B,KAAMA,UAKzC,C","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Library/Library.styled.js","pages/Library/Library.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    row-gap: 24px;\n    column-gap: 8px;\n\n    margin: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    justify-content: center;\n  }\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 280px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 16px) / 3);\n  }\n  @media screen and (min-width: 1280px) {\n    flex-basis: calc((100% - 32px) / 5);\n  }\n`;\n\nconst Item = styled(NavLink)`\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #ec9706;\n    transform: scale(1.1);\n  }\n`;\n\nconst Poster = styled.img`\n  height: 365px;\n  object-fit: cover;\n\n  @media screen and (max-width: 767px) {\n    width: 280px;\n    height: 390px;\n  }\n`;\n\nconst MovieInfo = styled.div`\n  padding: 12px 4px;\n`;\n\nexport { List, ListItem, Item, Poster, MovieInfo };\n","import { List, ListItem, Item, Poster, MovieInfo } from './MovieList.styled';\nimport defaultPicture from '../../images/placeholder.jpg';\n\nexport const MovieList = ({ items, type }) => {\n  return (\n    <List>\n      {items.map(({ id, poster_path, title, name }) => (\n        <ListItem key={id}>\n          <Item to={`/${type}/${id}`}>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title || name}\n            />\n            <MovieInfo>\n              <p>{title || name}</p>\n            </MovieInfo>\n          </Item>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nconst MoviesWrapper = styled.section`\n  padding: 36px 0;\n`;\n\nconst Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n\nconst InnerWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n\n  @media screen and (min-width: 1280px) {\n    gap: 36px;\n  }\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 4px;\n\n    width: 134px;\n    height: 44px;\n\n    font-size: 16px;\n\n    color: #fefefe;\n    background-color: transparent;\n\n    border: 2px solid #fefefe;\n    border-radius: 4px;\n    cursor: pointer;\n    outline: none;\n\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      border-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      color: #212121;\n      background-color: #fce205;\n      border-color: #fce205;\n      box-shadow: 0px 8px 12px -4px rgba(236, 151, 6, 0.32);\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 180px;\n      height: 50px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 210px;\n\n      font-size: 20px;\n    }\n  }\n`;\n\nexport { MoviesWrapper, Container, InnerWrapper, ButtonWrapper };\n","import { useState } from 'react';\nimport { RiFileListLine, RiMovie2Line } from 'react-icons/ri';\nimport { MovieList } from 'components/MovieList';\nimport {\n  MoviesWrapper,\n  Container,\n  InnerWrapper,\n  ButtonWrapper,\n} from './Library.styled';\n\nconst Library = ({ type }) => {\n  const [watchList] = useState(() => {\n    return JSON.parse(localStorage.getItem('watchList')) ?? [];\n  });\n  const [watched] = useState(() => {\n    return JSON.parse(localStorage.getItem('watched')) ?? [];\n  });\n  const allMoviesId = [...watchList, ...watched].map(({ id }) => id);\n  const uniqueMoviesId = allMoviesId.filter(\n    (id, index, array) => array.indexOf(id) === index\n  );\n  const uniqueMovies = uniqueMoviesId.map(id => {\n    return [...watchList, ...watched].find(movie => movie.id === id);\n  });\n  const [movies, setMovies] = useState(uniqueMovies);\n\n  const chooseMovieListToShow = name => {\n    switch (name) {\n      case 'watchList':\n        setMovies([...watchList]);\n        break;\n\n      case 'watched':\n        setMovies([...watched]);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <MoviesWrapper>\n      <Container>\n        <InnerWrapper>\n          <ButtonWrapper>\n            <button\n              type=\"button\"\n              onClick={() => chooseMovieListToShow('watchList')}\n            >\n              <RiFileListLine size={24} />\n              <span>Queue</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => chooseMovieListToShow('watched')}\n            >\n              <RiMovie2Line size={24} />\n              <span>Watched</span>\n            </button>\n          </ButtonWrapper>\n          <MovieList items={movies} type={type} />\n        </InnerWrapper>\n      </Container>\n    </MoviesWrapper>\n  );\n};\n\nexport default Library;\n"],"names":["List","styled","ListItem","Item","NavLink","Poster","MovieInfo","MovieList","items","type","map","id","poster_path","title","name","to","src","defaultPicture","alt","MoviesWrapper","Container","InnerWrapper","ButtonWrapper","useState","JSON","parse","localStorage","getItem","watchList","watched","uniqueMovies","filter","index","array","indexOf","find","movie","movies","setMovies","chooseMovieListToShow","onClick","size"],"sourceRoot":""}